// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/pmorie/federation-category-experiment/pkg/apis/federation/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FederatedReplicaSetOverrideLister helps list FederatedReplicaSetOverrides.
type FederatedReplicaSetOverrideLister interface {
	// List lists all FederatedReplicaSetOverrides in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.FederatedReplicaSetOverride, err error)
	// FederatedReplicaSetOverrides returns an object that can list and get FederatedReplicaSetOverrides.
	FederatedReplicaSetOverrides(namespace string) FederatedReplicaSetOverrideNamespaceLister
	FederatedReplicaSetOverrideListerExpansion
}

// federatedReplicaSetOverrideLister implements the FederatedReplicaSetOverrideLister interface.
type federatedReplicaSetOverrideLister struct {
	indexer cache.Indexer
}

// NewFederatedReplicaSetOverrideLister returns a new FederatedReplicaSetOverrideLister.
func NewFederatedReplicaSetOverrideLister(indexer cache.Indexer) FederatedReplicaSetOverrideLister {
	return &federatedReplicaSetOverrideLister{indexer: indexer}
}

// List lists all FederatedReplicaSetOverrides in the indexer.
func (s *federatedReplicaSetOverrideLister) List(selector labels.Selector) (ret []*v1beta1.FederatedReplicaSetOverride, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.FederatedReplicaSetOverride))
	})
	return ret, err
}

// FederatedReplicaSetOverrides returns an object that can list and get FederatedReplicaSetOverrides.
func (s *federatedReplicaSetOverrideLister) FederatedReplicaSetOverrides(namespace string) FederatedReplicaSetOverrideNamespaceLister {
	return federatedReplicaSetOverrideNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FederatedReplicaSetOverrideNamespaceLister helps list and get FederatedReplicaSetOverrides.
type FederatedReplicaSetOverrideNamespaceLister interface {
	// List lists all FederatedReplicaSetOverrides in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.FederatedReplicaSetOverride, err error)
	// Get retrieves the FederatedReplicaSetOverride from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.FederatedReplicaSetOverride, error)
	FederatedReplicaSetOverrideNamespaceListerExpansion
}

// federatedReplicaSetOverrideNamespaceLister implements the FederatedReplicaSetOverrideNamespaceLister
// interface.
type federatedReplicaSetOverrideNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FederatedReplicaSetOverrides in the indexer for a given namespace.
func (s federatedReplicaSetOverrideNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.FederatedReplicaSetOverride, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.FederatedReplicaSetOverride))
	})
	return ret, err
}

// Get retrieves the FederatedReplicaSetOverride from the indexer for a given namespace and name.
func (s federatedReplicaSetOverrideNamespaceLister) Get(name string) (*v1beta1.FederatedReplicaSetOverride, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("federatedreplicasetoverride"), name)
	}
	return obj.(*v1beta1.FederatedReplicaSetOverride), nil
}
